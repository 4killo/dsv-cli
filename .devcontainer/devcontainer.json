// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.241.1/containers/codespaces-linux
{
	"name": "devcontainer-thy",
	"build": {
		"dockerfile": "Dockerfile"
	},
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"go.toolsManagement.checkForUpdates": "local",
				"go.useLanguageServer": true,
				"go.gopath": "/go",
				"files.watcherExclude": {
					"**/target/**": true
				}
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"sheldon-hull.extension-pack-go"
			]
		}
	},
	"remoteUser": "codespace",
	"overrideCommand": false,
	"mounts": [
		"source=codespaces-linux-var-lib-docker,target=/var/lib/docker,type=volume",
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.ssh,target=/home/codespace/.ssh/,type=bind,consistency=cached", // support for SSH keys
		"source=${localEnv:HOME}${localEnv:USERPROFILE}/.envrc,target=/home/codespace/.envrc,type=bind,consistency=cached", // envrc from home to allow direnv to mount credentials
		"source=go-path,target=/home/codespace/go/,type=volume", // cache gopath directory to speed up rebuilds by not downloading deps each time
		"source=zshcache,target=/home/codespace/.zsh.cache/,type=volume" // caching for zsh history, zoxide and others, allowing it to persist after rebuild.
	],
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"--privileged",
		"--init"
	],
	"containerEnv": {
		// should pull via dockerfile and direnv, but saving in case this doesn't work
		// "GOROOT": "",
		// "GOPATH": "/home/codespaces/go",
		// "ASDF_DATA_DIR": "/home/codespaces/.asdf",
		// "ENV ASDF_DIR": "/home/codespaces/.asdf"
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// "oryx build" will automatically install your dependencies and attempt to build your project
	"postCreateCommand": "(mkdir -p /home/codespace/go || echo '❌ unable to create /home/codespace/go, does it already exist?') && sudo chown -R codespace /home/codespace/go && echo '⏳ initiating go mod download' && go mod download && echo '✅ postCreateCommand'"
}